{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/MINHAS%20PASTAS/COCREATEAI/PROJETOS/chat/frontend/src/contexts/auth-context.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { createContext, useContext, useState, useEffect, ReactNode } from 'react'\r\n\r\ninterface User {\r\n  id: string\r\n  name: string\r\n  email: string\r\n  avatar?: string\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null\r\n  isAuthenticated: boolean\r\n  login: (email: string, password: string) => Promise<boolean>\r\n  logout: () => void\r\n  updateUser: (user: Partial<User>) => void\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null)\r\n\r\n  useEffect(() => {\r\n    // Carregar usuário do localStorage\r\n    const storedUser = localStorage.getItem('user')\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser))\r\n    }\r\n  }, [])\r\n\r\n  const login = async (email: string, password: string): Promise<boolean> => {\r\n    // Login simples - sem backend por enquanto\r\n    // TODO: Implementar validação real com backend\r\n    \r\n    if (!email || !password) {\r\n      return false\r\n    }\r\n\r\n    // Simular login bem-sucedido\r\n    const newUser: User = {\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      name: email.split('@')[0],\r\n      email,\r\n    }\r\n\r\n    setUser(newUser)\r\n    localStorage.setItem('user', JSON.stringify(newUser))\r\n    return true\r\n  }\r\n\r\n  const logout = () => {\r\n    setUser(null)\r\n    localStorage.removeItem('user')\r\n  }\r\n\r\n  const updateUser = (updates: Partial<User>) => {\r\n    if (user) {\r\n      const updatedUser = { ...user, ...updates }\r\n      setUser(updatedUser)\r\n      localStorage.setItem('user', JSON.stringify(updatedUser))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, isAuthenticated: !!user, login, logout, updateUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext)\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider')\r\n  }\r\n  return context\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAmBA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,KAAqC;QAArC,EAAE,QAAQ,EAA2B,GAArC;;IAC3B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAE9C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,mCAAmC;YACnC,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,YAAY;gBACd,QAAQ,KAAK,KAAK,CAAC;YACrB;QACF;iCAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,2CAA2C;QAC3C,+CAA+C;QAE/C,IAAI,CAAC,SAAS,CAAC,UAAU;YACvB,OAAO;QACT;QAEA,6BAA6B;QAC7B,MAAM,UAAgB;YACpB,IAAI,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG;YACzC,MAAM,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE;YACzB;QACF;QAEA,QAAQ;QACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;QAC5C,OAAO;IACT;IAEA,MAAM,SAAS;QACb,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,MAAM,aAAa,CAAC;QAClB,IAAI,MAAM;YACR,MAAM,cAAc;gBAAE,GAAG,IAAI;gBAAE,GAAG,OAAO;YAAC;YAC1C,QAAQ;YACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;QAC9C;IACF;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM,iBAAiB,CAAC,CAAC;YAAM;YAAO;YAAQ;QAAW;kBACrF;;;;;;AAGP;GAjDgB;KAAA;AAmDT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///C:/MINHAS%20PASTAS/COCREATEAI/PROJETOS/chat/frontend/src/contexts/theme-context.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { createContext, useContext, useState, useEffect, ReactNode } from 'react'\r\n\r\ninterface ThemeColors {\r\n  primary: string    // Cor primária (botões, links, destaques)\r\n  secondary: string  // Cor secundária (badges, cards, elementos menores)\r\n}\r\n\r\ninterface ThemeContextType {\r\n  colors: ThemeColors\r\n  updateColors: (colors: Partial<ThemeColors>) => void\r\n  resetColors: () => void\r\n}\r\n\r\nconst DEFAULT_COLORS: ThemeColors = {\r\n  primary: '#1F3B57',    // Azul escuro da identidade visual\r\n  secondary: '#E26A5E',  // Coral/salmão da identidade visual\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined)\r\n\r\nexport function ThemeProvider({ children }: { children: ReactNode }) {\r\n  const [colors, setColors] = useState<ThemeColors>(DEFAULT_COLORS)\r\n\r\n  useEffect(() => {\r\n    // Carregar cores do localStorage\r\n    const storedColors = localStorage.getItem('themeColors')\r\n    if (storedColors) {\r\n      setColors(JSON.parse(storedColors))\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // Aplicar cores no CSS\r\n    document.documentElement.style.setProperty('--color-primary-custom', colors.primary)\r\n    document.documentElement.style.setProperty('--color-secondary-custom', colors.secondary)\r\n  }, [colors])\r\n\r\n  const updateColors = (newColors: Partial<ThemeColors>) => {\r\n    const updatedColors = { ...colors, ...newColors }\r\n    setColors(updatedColors)\r\n    localStorage.setItem('themeColors', JSON.stringify(updatedColors))\r\n  }\r\n\r\n  const resetColors = () => {\r\n    setColors(DEFAULT_COLORS)\r\n    localStorage.setItem('themeColors', JSON.stringify(DEFAULT_COLORS))\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ colors, updateColors, resetColors }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useTheme() {\r\n  const context = useContext(ThemeContext)\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider')\r\n  }\r\n  return context\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAeA,MAAM,iBAA8B;IAClC,SAAS;IACT,WAAW;AACb;AAEA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS,cAAc,KAAqC;QAArC,EAAE,QAAQ,EAA2B,GAArC;;IAC5B,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,iCAAiC;YACjC,MAAM,eAAe,aAAa,OAAO,CAAC;YAC1C,IAAI,cAAc;gBAChB,UAAU,KAAK,KAAK,CAAC;YACvB;QACF;kCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,uBAAuB;YACvB,SAAS,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,0BAA0B,OAAO,OAAO;YACnF,SAAS,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,4BAA4B,OAAO,SAAS;QACzF;kCAAG;QAAC;KAAO;IAEX,MAAM,eAAe,CAAC;QACpB,MAAM,gBAAgB;YAAE,GAAG,MAAM;YAAE,GAAG,SAAS;QAAC;QAChD,UAAU;QACV,aAAa,OAAO,CAAC,eAAe,KAAK,SAAS,CAAC;IACrD;IAEA,MAAM,cAAc;QAClB,UAAU;QACV,aAAa,OAAO,CAAC,eAAe,KAAK,SAAS,CAAC;IACrD;IAEA,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAQ;YAAc;QAAY;kBAC/D;;;;;;AAGP;GAjCgB;KAAA;AAmCT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}}]
}